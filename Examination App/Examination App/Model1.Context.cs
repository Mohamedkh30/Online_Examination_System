//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Examination_App
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Examination_DBEntities : DbContext
    {
        public Examination_DBEntities()
            : base("name=Examination_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Ins_Dept_Cr> Ins_Dept_Cr { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Stu_Courses> Stu_Courses { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
    
        public virtual ObjectResult<string> AuthInstructor(string email, string pass)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AuthInstructor", emailParameter, passParameter);
        }
    
        public virtual ObjectResult<string> DeleteDepartmentById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteDepartmentById", idParameter);
        }
    
        public virtual ObjectResult<string> DeleteDepartmentByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteDepartmentByName", nameParameter);
        }
    
        public virtual ObjectResult<string> DeleteInstructorById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteInstructorById", idParameter);
        }
    
        public virtual ObjectResult<string> DeleteInstructorByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DeleteInstructorByName", nameParameter);
        }
    
        public virtual ObjectResult<string> InsertDepartment(string name, Nullable<int> mngrId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mngrIdParameter = mngrId.HasValue ?
                new ObjectParameter("MngrId", mngrId) :
                new ObjectParameter("MngrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertDepartment", nameParameter, mngrIdParameter);
        }
    
        public virtual ObjectResult<string> InsertInstructor(string name, string email, string pass)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertInstructor", nameParameter, emailParameter, passParameter);
        }
    
        public virtual ObjectResult<string> InsertStuCrRelation(Nullable<int> stuId, Nullable<int> crId, Nullable<int> grade)
        {
            var stuIdParameter = stuId.HasValue ?
                new ObjectParameter("StuId", stuId) :
                new ObjectParameter("StuId", typeof(int));
    
            var crIdParameter = crId.HasValue ?
                new ObjectParameter("CrId", crId) :
                new ObjectParameter("CrId", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertStuCrRelation", stuIdParameter, crIdParameter, gradeParameter);
        }
    
        public virtual ObjectResult<SelectDepartmentById_Result> SelectDepartmentById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectDepartmentById_Result>("SelectDepartmentById", idParameter);
        }
    
        public virtual ObjectResult<SelectDepartmentByName_Result> SelectDepartmentByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectDepartmentByName_Result>("SelectDepartmentByName", nameParameter);
        }
    
        public virtual ObjectResult<SelectDepartments_Result> SelectDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectDepartments_Result>("SelectDepartments");
        }
    
        public virtual ObjectResult<SelectInstructorById_Result> SelectInstructorById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectInstructorById_Result>("SelectInstructorById", idParameter);
        }
    
        public virtual ObjectResult<SelectInstructorByName_Result> SelectInstructorByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectInstructorByName_Result>("SelectInstructorByName", nameParameter);
        }
    
        public virtual ObjectResult<SelectInstructors_Result> SelectInstructors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectInstructors_Result>("SelectInstructors");
        }
    
        public virtual ObjectResult<SelectStuCrRelationByCr_Result> SelectStuCrRelationByCr(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStuCrRelationByCr_Result>("SelectStuCrRelationByCr", idParameter);
        }
    
        public virtual ObjectResult<SelectStuCrRelationByStu_Result> SelectStuCrRelationByStu(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStuCrRelationByStu_Result>("SelectStuCrRelationByStu", idParameter);
        }
    
        public virtual ObjectResult<SelectStuCrRelations_Result> SelectStuCrRelations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStuCrRelations_Result>("SelectStuCrRelations");
        }
    
        public virtual ObjectResult<string> UpdateDepartmentById(Nullable<int> id, string name, Nullable<int> mngrId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mngrIdParameter = mngrId.HasValue ?
                new ObjectParameter("MngrId", mngrId) :
                new ObjectParameter("MngrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateDepartmentById", idParameter, nameParameter, mngrIdParameter);
        }
    
        public virtual ObjectResult<string> UpdateDepartmentByName(string name, Nullable<int> mngrId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mngrIdParameter = mngrId.HasValue ?
                new ObjectParameter("MngrId", mngrId) :
                new ObjectParameter("MngrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateDepartmentByName", nameParameter, mngrIdParameter);
        }
    
        public virtual ObjectResult<string> UpdateGrade(Nullable<int> stuId, Nullable<int> crId, Nullable<int> grade)
        {
            var stuIdParameter = stuId.HasValue ?
                new ObjectParameter("StuId", stuId) :
                new ObjectParameter("StuId", typeof(int));
    
            var crIdParameter = crId.HasValue ?
                new ObjectParameter("CrId", crId) :
                new ObjectParameter("CrId", typeof(int));
    
            var gradeParameter = grade.HasValue ?
                new ObjectParameter("grade", grade) :
                new ObjectParameter("grade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateGrade", stuIdParameter, crIdParameter, gradeParameter);
        }
    
        public virtual ObjectResult<string> UpdateInstructorById(Nullable<int> id, string name, string email, string pass)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateInstructorById", idParameter, nameParameter, emailParameter, passParameter);
        }
    
        public virtual ObjectResult<string> UpdateStuCrRelationByStu(Nullable<int> stuId, Nullable<int> crId1, Nullable<int> crId2)
        {
            var stuIdParameter = stuId.HasValue ?
                new ObjectParameter("StuId", stuId) :
                new ObjectParameter("StuId", typeof(int));
    
            var crId1Parameter = crId1.HasValue ?
                new ObjectParameter("CrId1", crId1) :
                new ObjectParameter("CrId1", typeof(int));
    
            var crId2Parameter = crId2.HasValue ?
                new ObjectParameter("CrId2", crId2) :
                new ObjectParameter("CrId2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateStuCrRelationByStu", stuIdParameter, crId1Parameter, crId2Parameter);
        }
    
        public virtual ObjectResult<string> AuthStudent(string email, string pass)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AuthStudent", emailParameter, passParameter);
        }
    }
}
